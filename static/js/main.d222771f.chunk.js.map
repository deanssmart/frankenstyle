{"version":3,"sources":["components/Input/Input.js","components/Button/Button.js","components/StartForm/StartForm.js","axios.js","data/actions/state.js","components/StartForm/index.js","data/actions/api.js","components/GameStart/GameStart.js","components/GameStart/index.js","components/SketchPad/SketchPad.js","components/SketchPad/index.js","components/GuessForm/GuessForm.js","components/GuessForm/index.js","components/EndScreen/EndScreen.js","components/EndScreen/index.js","components/App/App.js","components/App/index.js","data/initial.js","data/reducer.js","data/store.js","index.js"],"names":["Input","label","name","type","value","handleChange","className","htmlFor","id","onChange","defaultProps","Button","buttonClass","handleClick","onClick","StartForm","props","state","player1Name","player2Name","player3Name","player4Name","bind","handleSubmit","e","input","change","currentTarget","this","setState","preventDefault","handleSave","class","onSubmit","required","Component","axios","create","baseURL","headers","Accept","Authorization","saveRound","gameID","round","image_data","guess","roundInputs","connect","started","dispatch","post","player1","player2","player3","player4","then","data","players","word","image","newGame","postNewGame","GameStart","handleStart","alt","src","startGame","SketchPad","canvasRef","useRef","contextRef","useState","isDrawing","setIsDrawing","color","setColor","reRender","setReRender","useEffect","canvas","current","width","height","style","background","borderRadius","context","getContext","console","log","scale","lineCap","strokeStyle","lineWidth","img","Image","onload","drawImage","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","touches","clientX","clientY","offsetLeft","offsetTop","finishDrawing","closePath","imageData","toDataURL","draw","lineTo","stroke","onMouseDown","onMouseUp","onMouseMove","onTouchStart","onTouchEnd","onTouchMove","ref","onChangeComplete","hex","colors","circleSize","getState","postSketch","GuessForm","handleGuess","postGuess","EndScreen","handleReset","App","initial","reducer","action","newGameReducer","startGameReducer","saveRoundReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d222771f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../App.css\";\n\nconst Input = ({ label, name, type, value, handleChange, className }) => (\n  <div className=\"form-group\">\n    <label htmlFor={name}>{label}</label>\n    <input\n      className=\"form-control\"\n      id={name}\n      name={name}\n      type={type}\n      value={value}\n      onChange={handleChange}\n    />\n  </div>\n);\n\nInput.defaultProps = {\n  label: null,\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Button = ({ label, buttonClass, handleClick }) => (\n\n  <button\n    className={buttonClass}\n    onClick={handleClick}\n  >\n    {label}\n  </button>\n);\n\nButton.defaultProps = {\n  onClick: null,\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\nimport \"../../App.css\";\n\nclass StartForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      player1Name: \"\",\n      player2Name: \"\",\n      player3Name: \"\",\n      player4Name: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e, input) {\n    let change = {};\n    change[input] = e.currentTarget.value;\n    this.setState(change);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { player1Name, player2Name, player3Name, player4Name } = this.state;\n\n    if (\n      player1Name !== \"\" &&\n      player2Name !== \"\" &&\n      player3Name !== \"\" &&\n      player4Name !== \"\"\n    ) {\n      this.props.handleSave(player1Name, player2Name, player3Name, player4Name);\n    }\n  }\n\n  render() {\n    const { player1Name, player2Name, player3Name, player4Name } = this.state;\n\n    return (\n      <>\n        <div className=\"container-global\">\n          <div className=\"container-form-start\">\n            {/* <figure className=\"monster\">\n              <img\n                className=\"frank\"\n                src=\"./svgs/frankenweeny.svg\"\n                alt=\"frank\"\n              />\n            </figure> */}\n\n            <h1 class=\"start-title\">FrankenStyle</h1>\n            <form onSubmit={this.handleSubmit} className=\"form startform\">\n              <div className=\"row1\">\n                <Input\n                  label=\"Player 1\"\n                  name=\"player1Name\"\n                  type=\"text\"\n                  value={player1Name}\n                  handleChange={(e) => this.handleChange(e, \"player1Name\")}\n                  required\n                />\n              </div>\n              <div className=\"row2\">\n                <Input\n                  label=\"Player 2\"\n                  name=\"player2Name\"\n                  type=\"text\"\n                  value={player2Name}\n                  handleChange={(e) => this.handleChange(e, \"player2Name\")}\n                  required\n                />\n              </div>\n              <div className=\"row3\">\n                <Input\n                  label=\"Player 3\"\n                  name=\"player3Name\"\n                  type=\"text\"\n                  value={player3Name}\n                  handleChange={(e) => this.handleChange(e, \"player3Name\")}\n                  required\n                />\n              </div>\n              <div className=\"row4\">\n                <Input\n                  label=\"Player 4\"\n                  name=\"player4Name\"\n                  type=\"text\"\n                  value={player4Name}\n                  handleChange={(e) => this.handleChange(e, \"player4Name\")}\n                  required\n                />\n              </div>\n              <Button buttonClass=\"button button-startform\" label=\"Start\" />\n              <Button buttonClass=\"button rules \" label=\"Rules\" />\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default StartForm;\n","// import the library version of axios\nimport axios from \"axios\";\n\n// create a version of axios with useful defaults\nexport default axios.create({\n    baseURL: \"https://frankenstyle.developme.space/api/draw/games/\",\n    headers: {\n        // make sure we get JSON back\n        Accept: \"application/json\",\n\n        // use your own key\n        Authorization: \"Bearer R9tM2zkWkOmwWiV0pziHGL1RDREjEpwMkrXqDEcbpMe4fqiZv862pi94Dj6IYIHzLTvNcaQezbRdhJxc\",\n    },\n});","export const newGame = ({ players, word, id, image }) => {\n    return {\n        players,\n        word,\n        gameID: id,\n        image,\n        type: \"NEW_GAME\"\n    };\n};\n\nexport const startGame = (round) => {\n    return {\n        round,\n        type: \"START_GAME\"\n    };\n};\n\nexport const saveRound = ({\n    gameID,\n    round,\n    image_data,\n    guess,\n}) => {\n    return {\n        gameID,\n        round,\n        roundInputs: image_data || guess,\n        type: \"SAVE_ROUND\"\n    };\n};\n\nexport const reset = () => {\n    return {\n        type: \"RESET\",\n    };\n};\n","import { connect } from 'react-redux';\nimport StartForm from './StartForm';\nimport { postNewGame } from '../../data/actions/api';\n\nconst mapStateToProps = ({ started }) => ({ started });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: (\n            player1Name,\n            player2Name,\n            player3Name,\n            player4Name,\n        ) => dispatch(postNewGame(\n            player1Name,\n            player2Name,\n            player3Name,\n            player4Name,\n        ))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StartForm);","import axios from '../../axios';\nimport { newGame } from './state';\nimport { saveRound } from './state';\n\nexport const postNewGame = (\n    player1Name,\n    player2Name,\n    player3Name,\n    player4Name,\n) => {\n    return dispatch => {\n        axios.post('/', {\n            player1: player1Name,\n            player2: player2Name,\n            player3: player3Name,\n            player4: player4Name,\n        }).then(({ data }) => dispatch(newGame(data.data)));\n    };\n};\n\nexport const postSketch = (round, imageData) => {\n    return (dispatch, getState) => {\n        const id = getState().gameID;\n        axios.post(`${id}/rounds`, {\n            round,\n            image_data: imageData,\n        }).then(({ data }) => dispatch(saveRound(data.data)));\n    };\n};\n\nexport const postGuess = (round, guess) => {\n    return (dispatch, getState) => {\n        const id = getState().gameID;\n        axios.post(`${id}/rounds`, {\n            round,\n            guess,\n        }).then(({ data }) => dispatch(saveRound(data.data)));\n    };\n};\n","import React, { Component } from \"react\";\nimport Button from \"../Button/Button\";\nimport \"../../App.css\";\n\nclass GameStart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      word: props.word,\n      image: props.image,\n      round: props.round,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { round } = this.state;\n    this.props.handleStart(round);\n  }\n\n  render() {\n    const { word, image } = this.state;\n\n    return (\n      <div className=\"container-global\">\n        <div className=\"container-card-grid\">\n          <img alt={word} className=\"img-card\" src={image} />\n          <div className=\"card-lower\">\n            <p className=\"card-word card-lower-elements\">{word}</p>\n            <Button\n              label=\"Ready\"\n              buttonClass=\"button gamestart-button card-lower-elements\"\n              handleClick={this.handleSubmit}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GameStart;\n","import { connect } from 'react-redux';\nimport GameStart from './GameStart';\nimport { startGame } from '../../data/actions/state';\n\nconst mapStateToProps = ({ word, image, round }) => ({ word, image, round });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleStart: (round) => dispatch(startGame(round))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameStart);","import React, { useRef, useEffect, useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport { CirclePicker } from \"react-color\";\nimport \"../../App.css\";\n\nconst SketchPad = ({ word, round, roundInputs, handleSave, players }) => {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [color, setColor] = useState(\"#f44336\");\n  const [reRender, setReRender] = useState(\"\");\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 1000;\n    canvas.height = 1000;\n    canvas.style.width = `${500}px`;\n    canvas.style.height = `${500}px`;\n    canvas.style.background = \"white\";\n    canvas.style.borderRadius = `${1}rem ${1}rem ${1}rem`;\n\n    const context = canvas.getContext(\"2d\");\n    console.log(canvasRef);\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = color;\n    context.lineWidth = 8;\n    contextRef.current = context;\n\n    const img = new Image();\n    img.onload = () => {\n      context.drawImage(img, 0, 0, 500, 500);\n    };\n    img.src = reRender;\n  }, [round, color, reRender]);\n\n  const handleColor = (color) => {\n    setColor(color.hex);\n  };\n\n  const startDrawing = ({ nativeEvent }) => {\n    if (nativeEvent.type === \"mousedown\") {\n      const { offsetX, offsetY } = nativeEvent;\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(offsetX, offsetY);\n      setIsDrawing(true);\n    }\n    if (nativeEvent.type === \"touchstart\") {\n      const { clientX, clientY } = nativeEvent.touches[0];\n      const { offsetLeft, offsetTop } = canvasRef.current;\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(clientX - offsetLeft, clientY - offsetTop);\n      setIsDrawing(true);\n    }\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    const canvas = canvasRef.current;\n    const imageData = canvas.toDataURL();\n    setReRender(imageData);\n    setIsDrawing(false);\n  };\n\n  const draw = ({ nativeEvent }) => {\n    if (!isDrawing) {\n      return;\n    }\n    if (nativeEvent.type === \"mousemove\") {\n      const { offsetX, offsetY } = nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n    }\n    if (nativeEvent.type === \"touchmove\") {\n      const { clientX, clientY } = nativeEvent.touches[0];\n      const { offsetLeft, offsetTop } = canvasRef.current;\n      contextRef.current.lineTo(clientX - offsetLeft, clientY - offsetTop);\n      contextRef.current.stroke();\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const imageData = canvas.toDataURL();\n    handleSave(round, imageData);\n  };\n\n  return (\n\n    <div className=\"container-global\">\n      <div className=\"container-sketchpad\">\n      <div className=\"container-header\">\n       {round === 1 ? \n        <>\n          <h2>{word}</h2>\n          <p className=\"player-word\">{players[0]}</p> \n        </> :\n        <>\n          <h2>{roundInputs[1]}</h2>\n          <p className=\"player-word\">{players[2]}</p> \n        </>\n        }\n       </div> \n        <div className=\"container-grid-sketchpad\">\n          <canvas\n            className=\"border border-primary\"\n            onMouseDown={startDrawing}\n            onMouseUp={finishDrawing}\n            onMouseMove={draw}\n            onTouchStart={startDrawing}\n            onTouchEnd={finishDrawing}\n            onTouchMove={draw}\n            ref={canvasRef}\n          />\n          <div className=\"container-sketchpad-buttons\">\n            <CirclePicker\n              className=\"buttons-colour-pick\"\n              color={color}\n              onChangeComplete={handleColor}\n              colors={ [\"#f44336\", \"#e91e63\", \"#9c27b0\", \"#673ab7\", \"#3f51b5\", \"#2196f3\", \"#03a9f4\", \"#00bcd4\", \"#009688\", \"#4caf50\", \"#8bc34a\", \"#cddc39\", \"#ffeb3b\", \"#ffc107\", \"#ff9800\", \"#ff5722\", \"#ffffff\", \"#000000\"]}\n              circleSize={60}\n            />\n            <Button\n              buttonClass=\"button button-sketchpad\"\n              handleClick={(e) => handleSubmit(e)}\n              label=\"Submit\"\n            />\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SketchPad;\n","import { connect } from 'react-redux';\nimport SketchPad from './SketchPad';\nimport { postSketch } from '../../data/actions/api';\n\nconst mapStateToProps = ({ word, round, roundInputs, players }) => ({ word, round, roundInputs, players });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleSave: (round, imageData) => dispatch(postSketch(round, imageData)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SketchPad);","import React, { Component } from \"react\";\nimport Input from \"../Input/Input\";\nimport Button from \"../Button/Button\";\n\nclass GuessForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      players: props.players,\n      roundInputs: props.roundInputs,\n      round: props.round,\n      guess: \"\",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const guess = e.currentTarget.value;\n    this.setState({ guess });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { guess, round } = this.state;\n\n    if (guess !== \"\") {\n      this.props.handleGuess(round, guess);\n    }\n  }\n\n  render() {\n    const { players, roundInputs, round, guess } = this.state;\n\n    return (\n\n        <div className=\"container-global\">\n          <div className=\"container-card-grid\">\n            <img\n              alt=\"Player Drawing\"\n              className=\"img-card img-card-round-background\"\n              src={round === 2 ? roundInputs[0] : roundInputs[2]}\n            />\n            <form onSubmit={this.handleSubmit} className=\"container form card-lower\">  \n              <Input\n                label={round === 2 ? players[1] : players[3]}\n                name=\"guess\"\n                type=\"text\"\n                value={guess}\n                handleChange={this.handleChange}\n                required\n              />\n              <Button buttonClass=\"button button-guess\" label=\"Guess\" />\n            </form>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default GuessForm;\n","import { connect } from 'react-redux';\nimport GuessForm from './GuessForm';\nimport { postGuess } from '../../data/actions/api';\n\nconst mapStateToProps = ({ players, round, roundInputs }) => ({ players, round, roundInputs });\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleGuess: (round, guess) => dispatch(postGuess(round, guess)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GuessForm);","import React from \"react\";\nimport Button from \"../Button/Button\";\n\nconst EndScreen = ({ word, image, roundInputs, handleReset, players }) => {\n  return (\n    <>\n      <div className=\"container-global\">\n        <div className=\"container-endscreen\">\n          <div className=\"shadow\">\n            <div className=\"container-card-grid-endscreen card-grid-endscreen-original\">\n              <img\n                className=\"img-card img-card-round-background\"\n                alt={word}\n                src={image}\n              />\n              <div className=\"card-lower\">\n                <p className=\"card-word card-lower-elements\">{word}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"shadow\">\n            <div className=\"container-card-grid-endscreen card-grid-endscreen-sketch1\">\n              <img\n                className=\"img-card img-card-round-background\"\n                alt=\"player-1-drawing\"\n                src={roundInputs[0]}\n              />\n              <div className=\"card-lower\">\n                <p className=\"card-word card-lower-elements endscreen-card-text\">\n                  {/* <span>{players[1]} </span>\n                  <span>Guessed:</span> */}\n                  <span>{roundInputs[1]}</span>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"shadow\">\n            <div className=\"container-card-grid-endscreen card-grid-endscreen-sketch2\">\n              <img\n                className=\"img-card img-card-round-background\"\n                alt=\"player-2-drawing\"\n                src={roundInputs[2]}\n              />\n              <div className=\"card-lower\">\n                <p className=\"card-word card-lower-elements endscreen-card-text\">\n                  {/* <span>{players[3]} </span>\n                  <span>Guessed:</span> */}\n                  <span>{roundInputs[3]}</span>\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <Button\n            label=\"New Game\"\n            buttonClass=\"button button-newgame\"\n            handleClick={handleReset}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EndScreen;\n","import { connect } from \"react-redux\";\nimport EndScreen from \"./EndScreen\";\nimport { reset } from \"../../data/actions/state\";\n\nconst mapStateToProps = ({ word, image, roundInputs, players }) => ({\n  word,\n  image,\n  roundInputs,\n  players,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    handleReset: () => dispatch(reset()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EndScreen);\n","import React from \"react\";\nimport StartForm from \"../StartForm\";\nimport GameStart from \"../GameStart\";\nimport SketchPad from \"../SketchPad\";\nimport GuessForm from \"../GuessForm\";\nimport EndScreen from \"../EndScreen\";\n\nconst App = ({ round, started }) => (\n  <>\n    {!started ? <StartForm /> :\n      round === 0 ? <GameStart /> :\n        round === 1 || round === 3 ? <SketchPad /> :\n          round === 2 || round === 4 ? <GuessForm /> :\n            <EndScreen />\n    }\n  </>\n);\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\n\nconst mapStateToProps = ({ round, started }) => ({ round, started });\n\nexport default connect(mapStateToProps)(App);","const initial = {\n  started: false,\n  gameID: 0,\n  round: 0,\n  players: [],\n  roundInputs: [],\n  image: \"\",\n};\n\nexport default initial;\n","import initial from './initial';\n\nconst newGameReducer = (state, { gameID, word, players, image }) => {\n  return {\n    ...state,\n    gameID,\n    word,\n    players,\n    image,\n    started: true,\n  };\n};\n\nconst startGameReducer = (state, { round }) => {\n  return {\n    ...state,\n    round: round + 1.\n  };\n};\n\nconst saveRoundReducer = (state, { round, roundInputs }) => {\n  return {\n    ...state,\n    round: round + 1,\n    roundInputs: [...state.roundInputs, roundInputs],\n  };\n};\n\nconst resetReducer = (state) => {\n  return { ...initial };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"NEW_GAME\": return newGameReducer(state, action);\n    case \"START_GAME\": return startGameReducer(state, action);\n    case \"SAVE_ROUND\": return saveRoundReducer(state, action);\n    case \"RESET\": return resetReducer(state);\n    default: return state;\n  };\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\n\nimport reducer from './reducer';\nimport initial from './initial';\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducer, \n    initial,\n    composeEnhancers(applyMiddleware(thunk)) \n  );\n  \nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport store from './data/store';\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={ store }>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}